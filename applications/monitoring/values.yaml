kube-prometheus-stack:
  alertmanager:
    ingress:
      enabled: true
      ingressClassName: nginx
      hosts:
        - alertmanager.k3sdemo.lan
      pathType: "ImplementationSpecific"
    alertmanagerSpec:
      storage:
        volumeClaimTemplate:
          spec:
            storageClassName: "local-path"
            resources:
              requests:
                storage: "2Gi"
  grafana:
    ingress:
      enabled: "true"
      ingressClassName: nginx
      hosts:
        - grafana.k3sdemo.lan
    serviceMonitor:
      enabled: true
    additionalDataSources:
      - name: "loki"
        access: "proxy"
        orgId: "1"
        type: "loki"
        url: "http://loki.loki.svc.cluster.local:3100"
        version: "1"
    adminPassword: "admin"
    grafana.ini:
      users:
        viewers_can_edit: "false"
      auth:
        disable_login_form: "false"
        disable_signout_menu: "false"
      auth.anonymous:
          enabled: "true"
          org_role: "Viewer"
    dashboardProviders:
      dashboardproviders.yaml:
        apiVersion: 1
        providers:
          - name: default
            orgId: 1
            folder:
            type: file
            disableDeletion: true
            editable: false
            options:
              path: /var/lib/grafana/dashboards/default
    dashboards:
      default:
        LoggingStats:
          gnetId: 13407
          revison: 1
          datasource: default
        PromtailStats:
          gnetId: 15443
          revison: 1
          datasource: default
        ArgoCD:
          gnetId: 14584
          revision: 1
          datasource: default
        istiomesh:
          gnetId: 7639
          revision: 101
          datasource: default
        istioperf:
          gnetId: 11829
          revision: 101
          datasource: default
        istioservice:
          gnetId: 7636
          revision: 101
          datasource: default
        istiowork:
          gnetId: 7630
          revision: 101
          datasource: default
        istioctrl:
          gnetId: 7645
          revision: 101
          datasource: default
        NGINX:
          gnetId: 9614
          revision: 1
          datasource: default
        KeyCloak:
          gnetId: 10441
          revision: 1
          datasource: 1
    plugins:
      - grafana-piechart-panel
  kubeApiServer:
    enabled: "true"
  kubeControllerManager:
    enabled: "false"
  kubeDns:
    enabled: "false"
  kubeEtcd:
    enabled: "false"
  kubelet:
    enabled: "true"
  kubeProxy:
    enabled: "false"
  kubeScheduler:
    enabled: "false"
  kube-state-metrics:
    prometheus:
      monitor:
        enabled: true
  prometheus-node-exporter:
    prometheus:
      monitor:
        enabled: true
  prometheus:
    ingress:
      enabled: "true"
      ingressClassName: nginx
      hosts:
        - prometheus.k3sdemo.lan
      pathType: "ImplementationSpecific"
    prometheusSpec:
      storageSpec:
        volumeClaimTemplate:
          spec:
            storageClassName: "local-path"
            resources:
              requests:
                storage: "12Gi"
      additionalScrapeConfigs:
        - job_name: 'istiod'
          kubernetes_sd_configs:
          - role: endpoints
            namespaces:
              names:
              - istio-system
          relabel_configs:
          - source_labels: [__meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
            action: keep
            regex: istiod;http-monitoring
        - job_name: 'envoy-stats'
          metrics_path: /stats/prometheus
          kubernetes_sd_configs:
          - role: pod
          relabel_configs:
          - source_labels: [__meta_kubernetes_pod_container_port_name]
            action: keep
            regex: '.*-envoy-prom'
      serviceMonitorSelector: {}
      serviceMonitorSelectorNilUsesHelmValues: false
  prometheusOperator:
    admissionWebhooks:
      failurePolicy: "Ignore"
    prometheusSpec:
      retention: "14d"
      retentionSize: "10GB"
  defaultRules:
    rules:
      kubeScheduler: false
